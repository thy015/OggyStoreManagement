name: Dev

on:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]

jobs:
  test:
    name: Test and Analyze
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Verify formatting
        run: npm run format

      # - name: Run tests for changed files
      #   run: npm test -- --onlyChanged

      - name: Notify build completion
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build version ${GITHUB_REF} completed successfully!"}' ${WEBHOOK_URL}
        env:
          WEBHOOK_URL: https://app.slack.com/client/T088E3BU31Q/C088E17JZPV

  build-android:
    name: Build Android App
    needs: test
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      # keep track of what changes
      - name: Install Watchman (required for Metro bundler)
        run: |
          sudo apt-get update
          sudo apt-get install -y watchman

      - name: Run tests for changed files
        run: npm test -- --onlyChanged

      - name: Build project
        run: npm run build

      - name: UpLoad APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Notify Slack - Build Completed
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"Build completed successfully!"}' \
                https://app.slack.com/client/T088E3BU31Q/C088E17JZPV

  build-ios:
    name: Build iOS App
    needs: test
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Run tests for changed files
        run: npm test -- --onlyChanged

      - name: Build project
        run: npm run build

      - name: UpLoad IPA
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: ios/build/Release-iphoneos/app.app

  firebase-test-lab:
    name: Run UI tests with Firebase Test Lab
    needs: build-android
    runs-on: ubuntu-22.04
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v3

      - name: Download app APK
        uses: actions/download-artifact@v3
        with:
          name: app-release
          path: app-release

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCLOUD_AUTH }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install beta components
        run: |
          gcloud components install beta --quiet
          gcloud components update --quiet

      - name: Notify Slack - Run tests in Firebase Test Lab
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Run tests in Firebase Test Lab for version ${GITHUB_REF} completed successfully!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Run tests in Firebase Test Lab
        run: |
          BUCKET_NAME="test-lab"
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          gcloud firebase test android run \
            --type robo \
            --app app-debug/app-debug.apk \
            --device model=Pixel2,version=28,locale=en \
            --timeout 300s \
            --results-bucket=gs://$BUCKET_NAME \
            --results-dir=results-$TIMESTAMP \
            --robo-directives=text:emailTextField=eve.holt@reqres.in,text:passwordTextField=pistol \
            --quiet

      - name: Notify Slack - Tests Completed
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"UI tests in Firebase Test Lab completed successfully!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test, build-android, build-ios]

    steps:
      - uses: actions/checkout@v3

      - name: Upload Android APK to Server
        if: needs.build-android.result == 'success'
        run: |
          scp android/app/build/outputs/apk/release/app-release.apk user@server:/path/to/deploy

      - name: Upload iOS IPA to Server
        if: needs.build-ios.result == 'success'
        run: |
          scp ios/build/YourApp.ipa user@server:/path/to/deploy
